# Autograding File
#
# Do not modify this file. It is used by GitHub Classroom to run autograding tests.
# Changing it could cause your assignment to be graded incorrectly and may be
# considered academic dishonesty.
#
# If you have questions, please contact your instructor.
name: Autograding Tests
on:
  push:
    branches:
      - "main"
      - "master"
  repository_dispatch:
permissions:
  checks: write
  actions: read
  contents: write
jobs:
  run-autograding-tests:
    name: Run Autograding Tests
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      
      # Tests go here, see below for examples
      # Use either compscirocks/autograding-junit4@v1 or compscirocks/autograding-junit5@v1
      
      ## Examples, probably should delete these
      - name: Test - Unit Test
        id: unit-test-example
        uses: compscirocks/autograding-junit4@v1
        with:
          test-name: Test - Unit Test
          test-class: Test_ClassName
          lib-path: ./.lib
          timeout: 5
          max-score: 50
      - name: Test - Output
        id: output-test-example
        uses: compscirocks/autograding-io-grader@v1
        with:
          test-name: Test - Output
          setup-command: javac ClassToRun.java
          command: java ClassToRun
          input: |-
            1
            2
            3
          expected-output: |-
            1
            2
            3
          comparison-method: loose
          loose-trim: true
          loose-ignore-blank-lines: true
          loose-squash-spaces: true
          output-format: text
          timeout: 2
          max-score: 50 
      ## End Examples

      - name: Autograding Reporter
        id: autograding-reporter
        uses: compscirocks/autograding-grading-reporter@v1
        env:
          # These need to match the test ids above so that it's reported correctly. These
          # two match the examples below. 
          UNIT-TEST-EXAMPLE_RESULTS: "${{steps.unit-test-example.outputs.result}}"
          OUTPUT-TEST-EXAMPLE_RESULTS: "${{steps.output-test-example.outputs.result}}"
        with:
          # Match the test ids above, comma separated
          runners: unit-test-example,output-test-example

      - name: Checkout badge branch
        if: success() || failure()
        run: git checkout badges || git checkout -b badges
      - name: Create Points Badge
        uses: markpatterson27/points-bar@v1
        if: success() || failure()
        with:
          points: ${{ env.POINTS_STRING || '0/100'}}
          path: .github/badges/points-badge.svg
          type: badge
          label: Autograding
      - name: Commit Badge
        if: success() || failure()
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add '.github/badges/points-badge.svg'
          git commit -m "Add/Update points bar" || exit 0
          git push origin badges -f




       
  